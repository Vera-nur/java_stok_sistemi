/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package stoktakip;

import java.sql.*;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author veranur
 */
public class frm_stok extends javax.swing.JFrame {

    /**
     * Creates new form personelEkran
     */
    static personel personel;
    baglanti b = new baglanti();
    DefaultTableModel model3;

    public frm_stok(personel p) {
        initComponents();
        personel = p;
        b.comboBox("select * from stok_sistemi.ürünler ", "id", jComboBox1);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        adetText = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        stokEkle = new javax.swing.JButton();
        stokToplamUrun = new javax.swing.JButton();
        yenile = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        geributton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        urunler = new javax.swing.JMenu();
        satislar = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Stok Ekranı");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ürün Id", "Ürün Adı", "Adet", "Tarih", "Personel Adı"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Ürün Id:");

        jLabel2.setText("Adet:");

        jLabel3.setText(" Tarih:");

        stokEkle.setText("Stok Ekle");
        stokEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stokEkleActionPerformed(evt);
            }
        });

        stokToplamUrun.setText("Stok Toplam Ürün");
        stokToplamUrun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stokToplamUrunActionPerformed(evt);
            }
        });

        yenile.setText("Stokları Listele/Yenile");
        yenile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yenileActionPerformed(evt);
            }
        });

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jLabel4.setText("Ürün id Ara:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(adetText, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(60, 60, 60)
                                .addComponent(stokToplamUrun, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73)
                                .addComponent(stokEkle, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(yenile, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 97, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(stokEkle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yenile, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(adetText, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(stokToplamUrun, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(jTextField1)))
        );

        geributton.setText("Giriş Ekranı");
        geributton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geributtonActionPerformed(evt);
            }
        });

        urunler.setText("Ürünler");
        urunler.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                urunlerMouseClicked(evt);
            }
        });
        jMenuBar1.add(urunler);

        satislar.setText("Satışlar");
        satislar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                satislarMouseClicked(evt);
            }
        });
        jMenuBar1.add(satislar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 937, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96)
                        .addComponent(geributton)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(geributton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void urunlerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_urunlerMouseClicked
        new frm_urunler().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_urunlerMouseClicked

    private void satislarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_satislarMouseClicked
        new frm_satislar().setVisible(true);
    }//GEN-LAST:event_satislarMouseClicked
    /**
     * Bu metot, "Stok Ekle" butonuna tıklandığında çalışır ve yeni bir stok
     * kaydı ekler. Kullanıcı giriş yapmamışsa hata mesajı gösterir ve programı
     * kapatır. Ürün ID'sini, tarih, personel adını, ve adet bilgisini alır.
     * Girdi verilerini kontrol eder ve geçerli ise veritabanına stok kaydını
     * ekler.
     */
    private void stokEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stokEkleActionPerformed

        try {
            if (personel == null) {
                throw new Exception("Bu ekranı çalıştırmak için önce giriş yapmanız gerekmektedir.");
            }
        } catch (Exception e) {
            int response = JOptionPane.showConfirmDialog(null, e.getMessage(), "Hata", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
            if (response == JOptionPane.OK_OPTION) {
                System.exit(0);
            }
        }
        int id = Integer.parseInt(jComboBox1.getSelectedItem().toString());

        String tarih = String.valueOf(new java.sql.Date(jDateChooser1.getDate().getTime()));
        String perAd = personel.getKullaniciad();
        ResultSet urunAdSet = b.executeQuery("select * from stok_sistemi.ürünler where id=" + id);
        String urunAd = "";
        String adetRegex = "^[0-9]{1,5}$";
        try {
            if (adetText.getText().isEmpty()) {
                throw new Exception("Giriş kısımları boş bırakılamaz.");
            }
            if (!adetText.getText().matches(adetRegex)) {
                throw new Exception("Geçersiz adet girişi. Adetleri sadece sayılarla girebilirsiniz.");
            }

            LocalDate today = LocalDate.now();
            if (jDateChooser1.getDate() != null) {
                LocalDate selectedLocalDate = jDateChooser1.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                if (selectedLocalDate.isAfter(today)) {
                    throw new Exception("İleri bir tarih seçemezsiniz. Lütfen bugünün veya geçmiş bir tarihi seçin.");

                }
            } else {
                throw new Exception("Tarih kısmı boş bırakılamaz.");
            }

            while (urunAdSet.next()) {
                urunAd = urunAdSet.getString("ad");
            }
            int adet = Integer.parseInt(adetText.getText());

            PreparedStatement ps = new baglanti().preparedStatement("INSERT INTO stoklar (urunid,urunAd,adet,tarih,personel) VALUES (?,?,?,?,?)");
            int update = 0;

            ps.setInt(1, id);
            ps.setString(2, urunAd);
            ps.setInt(3, adet);
            ps.setString(4, tarih);
            ps.setString(5, perAd);
            update = ps.executeUpdate();

            if (update > 0) {
                JOptionPane.showMessageDialog(this, "Stok başarıyla eklendi ");
            } else {
                JOptionPane.showMessageDialog(this, "Stok eklenirken bir sorun oluştu", "sonuc", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }


    }//GEN-LAST:event_stokEkleActionPerformed
    /**
     * Bu metot, "Toplam Ürün Stoklarını Güncelle" butonuna tıklandığında
     * çalışır ve toplam stok miktarını günceller. Stok tablosundaki her ürün
     * için toplam adet hesaplanır ve toplam_stok tablosunda güncellenir. Eğer
     * toplam_stok tablosunda ilgili ürün zaten varsa, kayıt güncellenir, yoksa
     * yeni kayıt eklenir.
     */
    private void stokToplamUrunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stokToplamUrunActionPerformed

        try {
            String query = "SELECT urunid, urunAd, SUM(adet) AS toplamAdet FROM stoklar GROUP BY urunid, urunAd";

            PreparedStatement ps = b.preparedStatement(query);
            ResultSet rs = ps.executeQuery();
            //aynı primarykey olanın üstüne ekliyor yeniden satır oluşturmuyor.
            String q = "INSERT INTO toplam_stok (urunID, urunAd, toplamStok) VALUES (?, ?, ?) "
                    + "ON DUPLICATE KEY UPDATE urunAd = VALUES(urunAd), toplamStok = VALUES(toplamStok)";

            PreparedStatement ps2 = b.preparedStatement(q);
            int yanit = 0;
            while (rs.next()) {
                int urunID = rs.getInt("urunid");
                String urunAd = rs.getString("urunAd");
                int toplamAdet = rs.getInt("toplamAdet");

                ps2.setInt(1, urunID);
                ps2.setString(2, urunAd);
                ps2.setInt(3, toplamAdet);
                yanit = ps2.executeUpdate();
            }

            ArrayList<satislarclass> list = satislarclass.getSatisList();
            for (satislarclass object : list) {
                int update = b.executeUpdate("UPDATE stok_sistemi.toplam_stok SET toplamStok = toplamStok - " + object.getAdet() + " WHERE urunID = " + object.getUrunId());
                System.out.println(update);
            }
            satislarclass.clear1();
            if (yanit == 1) {
                JOptionPane.showMessageDialog(this, "Toplam stok başarıyla güncellendi");
            } else {
                JOptionPane.showMessageDialog(this, "Toplam stok güncellenemedi.");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

        DefaultTableModel model1 = b.colName("SELECT *  FROM stok_sistemi.toplam_stok", jTable1);

        jTable1.setModel(model1);
        b.tabloyaEkle("SELECT * FROM stok_sistemi.toplam_stok", jTable1, model1);

    }//GEN-LAST:event_stokToplamUrunActionPerformed

    private void geributtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geributtonActionPerformed
        new frm_login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_geributtonActionPerformed
    /**
     * Bu metot, "Yenile" butonuna tıklandığında çalışır ve stok tablosunu
     * yeniler. Veritabanındaki stok kayıtlarını alır ve JTable'da gösterir.
     */
    private void yenileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yenileActionPerformed

        DefaultTableModel model2 = new DefaultTableModel();
        jTable1.setModel(model2);
        model2.setColumnIdentifiers(new String[]{"Ürün ID", "Ürün Adı", "Adet", "Tarih", "Personel Adı"});

        ResultSet rs = b.executeQuery("select * from stok_sistemi.stoklar ");
        ResultSetMetaData rsmd;
        int columnCount = 0;
        try {
            rsmd = rs.getMetaData();
            columnCount = rsmd.getColumnCount();

            while (rs.next()) {
                Object[] row = new Object[columnCount];
                for (int i = 1; i < columnCount; i++) {
                    row[i - 1] = rs.getObject(i + 1);
                }
                model2.addRow(row);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }//GEN-LAST:event_yenileActionPerformed
    /**
     * Bu metot, jTextField1 alanına bir tuş basıldığında çalışır ve stoklar
     * tablosunu filtreler. Girilen metni kullanarak stoklar tablosunda arama
     * yapar ve sonuçları JTable'da gösterir.
     */
    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        model3 = new DefaultTableModel();
        jTable1.setModel(model3);
        model3.setColumnIdentifiers(new String[]{"Ürün ID", "Ürün Adı", "Adet", "Tarih", "Personel Adı"});
        model3.setRowCount(0);
        ArrayList list = b.search(jTextField1.getText(), "urunid", "stoklar");
        for (Object object : list) {
            if (object instanceof stoklar) {
                model3.addRow(new Object[]{((stoklar) object).getUrunId(), ((stoklar) object).getUrunAd(), ((stoklar) object).getAdet(), ((stoklar) object).getTarih(), ((stoklar) object).getPersonel()});
            }
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_stok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_stok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_stok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_stok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new frm_stok(personel).setVisible(true);
            } catch (Exception e) {
                int response = JOptionPane.showConfirmDialog(null, "Bu ekranı çalıştırmak için önce giriş yapmanız gerekmektedir.", "Hata", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                if (response == JOptionPane.OK_OPTION) {
                    System.exit(0);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adetText;
    private javax.swing.JButton geributton;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JMenu satislar;
    private javax.swing.JButton stokEkle;
    private javax.swing.JButton stokToplamUrun;
    private javax.swing.JMenu urunler;
    private javax.swing.JButton yenile;
    // End of variables declaration//GEN-END:variables
}
